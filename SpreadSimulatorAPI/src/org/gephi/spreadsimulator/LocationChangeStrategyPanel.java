/*
 * Copyright 2008-2010 Gephi
 * Authors : Cezary Bartosiak
 * Website : http://www.gephi.org
 *
 * This file is part of Gephi.
 *
 * Gephi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Gephi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.gephi.spreadsimulator;

import java.util.*;
import java.util.Map.Entry;
import javax.swing.*;
import net.miginfocom.swing.MigLayout;

/**
 *
 *
 * @author Cezary Bartosiak
 */
public class LocationChangeStrategyPanel extends javax.swing.JPanel {
	private LocationProbabilityPanel[] locationProbabilityPanels;

    /** Creates new form LocationChangeStrategyPanel */
    public LocationChangeStrategyPanel() {
		initComponents();
    }

	public Map<String, Double> getLocationsProbabilities() {
		if (locationProbabilityPanels != null) {
			Map<String, Double> locationsProbabilities = new HashMap<String, Double>();
			for (LocationProbabilityPanel lpp : locationProbabilityPanels)
				locationsProbabilities.put(lpp.getLocation(), lpp.getProbability());
			return locationsProbabilities;
		}
		return null;
	}

	public void setLocationsProbabilities(Map<String, Double> locationsProbabilities) {
		locationProbabilityPanels = new LocationProbabilityPanel[locationsProbabilities.size()];
		int index = 0;

		contentPanel.removeAll();
		contentPanel.setLayout(new MigLayout("", "[60:60:60]4[]"));
		for (Entry<String, Double> entry : locationsProbabilities.entrySet()) {
			String location = entry.getKey();
			double probability = entry.getValue();
			LocationProbabilityPanel lpp = new LocationProbabilityPanel(location, probability);
			locationProbabilityPanels[index++] = lpp;
			contentPanel.add(lpp.getSpinner(), "growx");
			contentPanel.add(lpp.getLabel(), "wrap");
		}
		contentPanel.revalidate();
		contentPanel.repaint();
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        header = new org.jdesktop.swingx.JXHeader();
        contentScrollPane = new javax.swing.JScrollPane();
        contentPanel = new javax.swing.JPanel();
        setLocationsLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(458, 463));

        header.setDescription(org.openide.util.NbBundle.getMessage(LocationChangeStrategyPanel.class, "LocationChangeStrategyPanel.header.description")); // NOI18N
        header.setTitle(org.openide.util.NbBundle.getMessage(LocationChangeStrategyPanel.class, "LocationChangeStrategyPanel.header.title")); // NOI18N

        contentPanel.setLayout(new java.awt.GridLayout(1, 0));
        contentScrollPane.setViewportView(contentPanel);

        setLocationsLabel.setText(org.openide.util.NbBundle.getMessage(LocationChangeStrategyPanel.class, "LocationChangeStrategyPanel.setLocationsLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                    .addComponent(setLocationsLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(setLocationsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JScrollPane contentScrollPane;
    private org.jdesktop.swingx.JXHeader header;
    private javax.swing.JLabel setLocationsLabel;
    // End of variables declaration//GEN-END:variables

	private static class LocationProbabilityPanel {
		private final JLabel label;
		private final JSpinner spinner;

		public LocationProbabilityPanel(String location, double probability) {
			spinner = new JSpinner(new SpinnerNumberModel(probability, 0.0, 1.0, 0.01));
			label = new JLabel(location);
		}
		
		public JLabel getLabel() {
			return label;
		}
		
		public JSpinner getSpinner() {
			return spinner;
		}
		
		public String getLocation() {
			return label.getText();
		}
		
		public double getProbability() {
			return (Double)spinner.getValue();
		}
		
		public void setProbability(double probability) {
			spinner.setValue(probability);
		}
	}
}
